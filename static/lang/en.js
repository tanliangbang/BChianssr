export const lang = {
  common: {
    prePage: 'Previous Page',
    nextPage: 'Next Page',
  },
  header: {
    market: 'MARKET',
    exchange: 'EXCHANGE',
    login: 'Log In',
    regist: 'Sign Up',
    otc: 'OTC',
    contractManage: 'Contract Management',
    assetsManage: 'Assets Management'
  },
  bottom: {
    tools: 'Tools',
    digital: 'Digital Asset Introduction',
    clientDown: 'Download Clients',
    doc: 'API Doc',
    help: 'Help',
    aboutUs: 'About US',
    aboutBilian: 'About Bilian',
    contactUs: 'Contact Us',
    join: 'Careers',
    clauseInstruct: 'Clause Instruction',
    termsOfUser: 'Terms of User',
    privacyPolicy: 'Privacy Policy',
    legalStatement: 'Legal Statement'
  },
  index: {
    estimatedValue: 'Estimated Value',
    todayProfit: 'Today’s Profit',
    turnover: 'Turnover',
    all: 'All',
    coin: 'Coin',
    totalValue: 'Total Value',
    totalAmount: 'Total Amount',
    vol: 'VOL',
    change: 'Change',
    price: 'Last Price'
  },
  exchange: {
    optional: 'Optional',
    search: 'Search',
    searchPromit: 'Search Coin',
    price: 'Price',
    time: 'Time',
    coinAsset: 'Coin Assets',
    available: 'Available',
    total: 'Total',
    rechange: 'Recharge',
    limitOrder: 'Limit Order',
    marketOrder: 'Market Order',
    amount: 'Amount',
    totalPrice: 'Total Price',
    martkPrompt: 'Buy at the best price in the market',
    sum: 'Sum',
    buy: 'Buy',
    mbuy: 'Buy',
    msell: 'Sell',
    sell: 'Sell',
    lastPrice: 'Last Price'
  },
  otc: {
    buy: 'Buy',
    sell: 'Sell',
    merchant: 'Merchant',
    volume: 'Volume',
    limits: 'Limits',
    price: 'Price',
    paymenthod: 'Payment Method',
    exchange: 'Exchange',
    control: 'Control',
    goTrade: 'Trade',
    myOrder: 'My Order',
    search: 'Search',
    orderNum: 'Order Number',
    direction: 'Direction',
    free: 'Free',
    coin: 'Coin',
    amount: 'Amount',
    totalPrice: 'Total Price',
    time: 'Time',
    state: 'State',
    counterparty: 'Counterparty',
    productInfo: 'Product Infomation',
    oPaymenthod: 'Payment Method',
    seller: 'Seller',
    oLimits: 'Limits',
    address: 'Address',
    timeLimit: 'Time limit',
    buyAmount: 'Buy Amount',
    buyPrice: 'Buy Price',
    sellAmount: 'Sell Amount',
    sellPrice: 'Sell Price',
    leaveWord: 'Leave Word',
    placeOrder: 'Place Order',
    buyInfo: 'Buy Infomation',
    orderNum: 'Order Number',
    payInfo: 'Pay Infomation',
    bankCard: 'BankCard',
    alipay: 'Alipay',
    weiXin: 'WeiXin',
    needPay: 'Need Pay',
    prompt1: 'Matters needing attention',
    prompt2: '1、Please complete the payment within a fixed time and click confirm. After the seller receives the money, the digital currency will be directly entered into your account.',
    prompt3: '2、In the transaction, the exchange will trust the seller digital currency, and the buyer money will be directly entered into the seller account.',
    prompt4: '3、If the order is cancelled 3 times on that day, the day trading will be restricted.',
    cancelOrder: 'CancelOrder',
    memo: 'Memo',
    memoPrompt: 'The reference number of the payment must be made during the transfer'
  },
  entrustManage: {
    processContracts: 'Processing Contracts',
    historyContracts: 'Historical  Contracts',
    time: 'Time',
    tradeType: 'Trade Type',
    sold: 'Sold',
    coinType: 'Coin Type',
    direction: 'Direction',
    price: 'Price',
    volume: 'Volume',
    contractValue: 'Contract Value',
    contractState: 'Contract State',
    finished: 'Finished',
    status: 'Status',
    averagePrice: 'AveragePrice',
    unfinished: 'Finished',
    exchange: 'Exchange',
    control: 'Control',
    delete: 'Delete',
    onlyShowFinished: 'Only show up finished contract',
    search: 'Search'
  },
  assertManage: {
    today: 'Today',
    sumProfit: 'Sum Profit',
    totalAccount: 'Total Assets',
    tradeAccount: 'Trade Account',
    assets: 'Assets',
    financialRecord: 'Financial Record',
    deposit: 'Deposit',
    withdraw: 'Withdraw',
    coinName: 'Name',
    available: 'Available',
    frozen: 'Frozen',
    control: 'Control',
    title1: 'Deposit',
    title2: 'to',
    withdrawAdress: 'Withdraw Adress',
    content1: 'Copy ',
    content2: 'QR code',
    content3: 'to view',
    content4: 'recharge record',
    tips: 'Tips',
    promit1: '1.Please don’t deposit any other digital assets except BTC  to the above address。',
    promit2: '2.Depositing to the above address requires confirmations of the entire network. The coin will ' +
    'get to account after first confirmations. Withdraw will be available after six times confirmations。',
    promit3: '3.Minimum deposit amount: 0.01BTC. Any deposits less than the minimum will not be credited or refunded。',
    promit4: '4.Your deposit address won’t change frequently. Any changes, we will inform you by announcement or email。',
    promit5: '5.Please make sure that your computer and browser are secure and your information is protected from being tampered or leaked。',
    close: 'close'
  },
  financeRecord: {
    financeRecord: 'FinanceRecord',
    exchangeRecord: 'ExchangeRecord',
    time: 'Time',
    coinType: 'Coin Type',
    movement: 'Movement',
    volume: 'Volume',
    state: 'State',
    details: 'Details'
  },
  userCenter: {
    accountSecurity: 'Account Security',
    verification: 'Verification',
    paymentMethod: 'Payment Method',
    email: 'email',
    phoneNumber: 'Phone Number',
    password: 'Login Password',
    loginexist: 'Login Exit',
    setUp: 'setUp',
    unChange: 'Unable to change',
    change: 'Change',
    logout: 'logOut',
    loginHistory: 'Login History',
    time: 'Time',
    loginWay: 'Login Way',
    ip: 'IP',
    state: 'State',
    city: 'City',
    level1: 'Level one Certification',
    level2: 'Level two Certification',
    nationality: 'Nationality',
    name: 'Name',
    idNumber: 'ID Number',
    uploadId1: 'Upload the front of ID card',
    uploadId2: 'Upload identity card',
    uploadId3: 'Upload Head culpture',
    forExample: 'For Example',
    prompt: 'Support jpg,png format files no more than 3M',
    next: 'Next',
    addPayWay: 'Add a collection account',
    paymentMethod: 'Payment Method',
    addCollection: 'Add a collection account',
    realName: 'RealName',
    pay1: 'WeChat',
    pay2: 'Alipay',
    pay3: 'Bank card',
    payCode: 'ChequesCode',
    bankName: 'Bank Name',
    addPrompt1: 'Please upload your',
    addPrompt2: 'receipts two dimensional code pictures',
    accountBranch: 'OpenBranch',
    bankNum: 'BankAccount',
    commit: 'Commit',
    goBindEmail: 'GO Bind',
    placeholdName: 'Please Enter Name',
    placeholdIdCard: 'Please Enter ID Card',
    idCardPrompt: 'ID ID number is incorrect',
    please: 'Please',
    alipayAccount: 'Alipay Account',
    wechatAccount: 'Wechat Account',
    bankAccount: 'Bank Account',
    bankDeposit: 'Bank Name',
    bankBranch: 'Bank Branch',
    addSuccess: 'Add Success',
    examine: 'Examine',
    autherSubmited: 'The data has been submitted and the audit will take about 3 minutes',
    authered: 'Your identity authentication has been completed',
    authorize: 'Authorize'
  },
  form: {
    loginTitle: 'Log in with Bilian account',
    loginSubmit: 'Log In',
    forgot: 'Forgot Password',
    registTitle: 'Sign up Bilian account',
    pleaseLoginInfo: 'Please enter Login Information',
    nameOrPassError: 'Username or password rrror',
    phonePrompt: 'Please enter phone number',
    phoneError: 'Phone Number error',
    codePrompt: 'Please Get Code',
    getCode: 'Get Code',
    pleaseEnterCode: 'Please enter Code',
    passPrompt: 'Please enter password',
    repassPrompt: 'Two cipher inconsistencies',
    passLast6: 'The password is at least 6 bits',
    numberAndLetter: 'A combination of numbers and letters',
    pleaseEnterRepass: 'Please enter Confirm the password',
    passInconsistent: 'Two cipher inconsistencies',
    emailPrompt: 'Please enter the mailbox',
    emailFormatError: 'Mailbox format error',
    codeError: 'Verification code error',
    registFail: 'Regist failed',
    next: 'Next Step',
    referrer: 'Referrer',
    sendFail: 'Send fail',
    userExsit: 'User Exist',
    goLogin: 'Log In',
    send: 'Send',
    sended: 'Sended',
    successPrompt: 'Congratulations, success in registration',
    bindEmailPrompt: 'The transaction operation needs to complete the mailbox validation. Please complete the mailbox validation',
    submit: 'OK',
    returnHome: 'Return Home',
    eCodePrompt1: 'ple',
    eCodePrompt2: 'ase',
    eCodePrompt3: 'en',
    eCodePrompt4: 'ter',
    eCodePrompt5: 'co',
    eCodePrompt6: 'de',
    bindSuccess: 'Email bind Success',
    bindFail: 'Email bind fail',
    foundSuccess: 'Passwrod Found Success',
    changeSuccess: 'Change Success',
    changeFail: 'Change Fail',
    goLogin: 'GO LOGIN'
  },
  errorPrompt: {
    'MISSING_NGTOKEN': 'MISSING_NGTOKEN',
    'INVALID_NGTOKEN': 'INVALID_NGTOKEN',
    'GEETEST_INIT_FAILED': 'GEETEST_INIT_FAILED',
    'INVALID_GEETOKEN': 'INVALID_GEETOKEN面',
    'MOBILE_ALREADY_EXIST': 'MOBILE_ALREADY_EXIST',
    'GEETEST_VERIFY_FAILED': 'GEETEST_VERIRY_FAILED',
    'INVALID_MOBILE_CODE': 'INVALID_MOBILE_CODE',
    'INVALID_USERNAME_OR_PASSWORD': 'INVALID_USERNAME_OR_PASSWORD',
    'INVALID_MOBILE_TOKEN': 'INVALID_MOBILE_TOKEN',
    'MOBILE_NOT_MATCH': 'MOBILE_NOT_MATCH',
    'MOBILE_CODE_NOT_MATCH': 'MOBILE_CODE_NOT_MATCH',
    'INVALID_EMAIL_BIND_TOKEN': 'INVALID_EMAIL_BIND_TOKEN',
    'GET_USERINFO_FAILED': 'GET_USERINFO_FAILED',
    'USER_ALREADY_BIND_EMAIL': 'USER_ALREADY_BIND_EMAIL',
    'EMAIL_SEND_FAILED': 'EMAIL_SEND_FAILED',
    'EMAIL_NOT_MATCH': 'EMAIL_NOT_MATCH',
    'EMAIL_CODE_NOT_MATCH': 'EMAIL_CODE_NOT_MATCH',
    'EMAIL_NOT_BIND': 'EMAIL_NOT_BIND',
    'INVALID_EMAIL_RESET_TOKEN': 'INVALID_EMAIL_RESET_TOKEN',
    'MOBILE_NOT_EXIST': 'MOBILE_NOT_EXIST'

  }
}
